; ModuleID = 'EditDistance.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-freebsd10.0"

@.str = private unnamed_addr constant [8 x i8] c"balloon\00", align 1
@.str1 = private unnamed_addr constant [7 x i8] c"baboon\00", align 1
@.str2 = private unnamed_addr constant [43 x i8] c"The edit distance between %s and %s is %d\0A\00", align 1

; Function Attrs: nounwind uwtable
define i32 @ComputeEditDistance(i8* %w1, i32 %s1, i8* %w2, i32 %s2) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %grid = alloca i16*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %j1 = alloca i32, align 4
  %i2 = alloca i32, align 4
  %left = alloca i32, align 4
  %diag = alloca i32, align 4
  %above = alloca i32, align 4
  %min = alloca i32, align 4
  %ret = alloca i32, align 4
  store i8* %w1, i8** %1, align 8
  store i32 %s1, i32* %2, align 4
  store i8* %w2, i8** %3, align 8
  store i32 %s2, i32* %4, align 4
  %5 = load i32* %2, align 4
  %6 = sext i32 %5 to i64
  %7 = mul i64 2, %6
  %8 = load i32* %4, align 4
  %9 = sext i32 %8 to i64
  %10 = mul i64 %7, %9
  %11 = call noalias i8* @malloc(i64 %10)
  %12 = bitcast i8* %11 to i16*
  store i16* %12, i16** %grid, align 8
  store i32 0, i32* %i, align 4
  br label %13

; <label>:13                                      ; preds = %24, %0
  %14 = load i32* %i, align 4
  %15 = load i32* %2, align 4
  %16 = icmp slt i32 %14, %15
  br i1 %16, label %17, label %27

; <label>:17                                      ; preds = %13
  %18 = load i32* %i, align 4
  %19 = trunc i32 %18 to i16
  %20 = load i32* %i, align 4
  %21 = sext i32 %20 to i64
  %22 = load i16** %grid, align 8
  %23 = getelementptr inbounds i16* %22, i64 %21
  store i16 %19, i16* %23, align 2
  br label %24

; <label>:24                                      ; preds = %17
  %25 = load i32* %i, align 4
  %26 = add nsw i32 %25, 1
  store i32 %26, i32* %i, align 4
  br label %13

; <label>:27                                      ; preds = %13
  store i32 0, i32* %j, align 4
  br label %28

; <label>:28                                      ; preds = %41, %27
  %29 = load i32* %j, align 4
  %30 = load i32* %4, align 4
  %31 = icmp slt i32 %29, %30
  br i1 %31, label %32, label %44

; <label>:32                                      ; preds = %28
  %33 = load i32* %j, align 4
  %34 = trunc i32 %33 to i16
  %35 = load i32* %j, align 4
  %36 = load i32* %2, align 4
  %37 = mul nsw i32 %35, %36
  %38 = sext i32 %37 to i64
  %39 = load i16** %grid, align 8
  %40 = getelementptr inbounds i16* %39, i64 %38
  store i16 %34, i16* %40, align 2
  br label %41

; <label>:41                                      ; preds = %32
  %42 = load i32* %j, align 4
  %43 = add nsw i32 %42, 1
  store i32 %43, i32* %j, align 4
  br label %28

; <label>:44                                      ; preds = %28
  store i32 1, i32* %j1, align 4
  br label %45

; <label>:45                                      ; preds = %138, %44
  %46 = load i32* %j1, align 4
  %47 = load i32* %4, align 4
  %48 = icmp slt i32 %46, %47
  br i1 %48, label %49, label %141

; <label>:49                                      ; preds = %45
  store i32 1, i32* %i2, align 4
  br label %50

; <label>:50                                      ; preds = %134, %49
  %51 = load i32* %i2, align 4
  %52 = load i32* %2, align 4
  %53 = icmp slt i32 %51, %52
  br i1 %53, label %54, label %137

; <label>:54                                      ; preds = %50
  %55 = load i32* %j1, align 4
  %56 = load i32* %2, align 4
  %57 = mul nsw i32 %55, %56
  %58 = load i32* %i2, align 4
  %59 = sub nsw i32 %58, 1
  %60 = add nsw i32 %57, %59
  %61 = sext i32 %60 to i64
  %62 = load i16** %grid, align 8
  %63 = getelementptr inbounds i16* %62, i64 %61
  %64 = load i16* %63, align 2
  %65 = sext i16 %64 to i32
  store i32 %65, i32* %left, align 4
  %66 = load i32* %j1, align 4
  %67 = sub nsw i32 %66, 1
  %68 = load i32* %2, align 4
  %69 = mul nsw i32 %67, %68
  %70 = load i32* %i2, align 4
  %71 = sub nsw i32 %70, 1
  %72 = add nsw i32 %69, %71
  %73 = sext i32 %72 to i64
  %74 = load i16** %grid, align 8
  %75 = getelementptr inbounds i16* %74, i64 %73
  %76 = load i16* %75, align 2
  %77 = sext i16 %76 to i32
  store i32 %77, i32* %diag, align 4
  %78 = load i32* %j1, align 4
  %79 = sub nsw i32 %78, 1
  %80 = load i32* %2, align 4
  %81 = mul nsw i32 %79, %80
  %82 = load i32* %i2, align 4
  %83 = add nsw i32 %81, %82
  %84 = sext i32 %83 to i64
  %85 = load i16** %grid, align 8
  %86 = getelementptr inbounds i16* %85, i64 %84
  %87 = load i16* %86, align 2
  %88 = sext i16 %87 to i32
  store i32 %88, i32* %above, align 4
  %89 = load i32* %left, align 4
  %90 = load i32* %diag, align 4
  %91 = icmp slt i32 %89, %90
  br i1 %91, label %92, label %94

; <label>:92                                      ; preds = %54
  %93 = load i32* %left, align 4
  br label %96

; <label>:94                                      ; preds = %54
  %95 = load i32* %diag, align 4
  br label %96

; <label>:96                                      ; preds = %94, %92
  %97 = phi i32 [ %93, %92 ], [ %95, %94 ]
  store i32 %97, i32* %min, align 4
  %98 = load i32* %min, align 4
  %99 = load i32* %above, align 4
  %100 = icmp slt i32 %98, %99
  br i1 %100, label %101, label %103

; <label>:101                                     ; preds = %96
  %102 = load i32* %min, align 4
  br label %105

; <label>:103                                     ; preds = %96
  %104 = load i32* %above, align 4
  br label %105

; <label>:105                                     ; preds = %103, %101
  %106 = phi i32 [ %102, %101 ], [ %104, %103 ]
  store i32 %106, i32* %min, align 4
  %107 = load i32* %i2, align 4
  %108 = sext i32 %107 to i64
  %109 = load i8** %1, align 8
  %110 = getelementptr inbounds i8* %109, i64 %108
  %111 = load i8* %110, align 1
  %112 = sext i8 %111 to i32
  %113 = load i32* %j1, align 4
  %114 = sext i32 %113 to i64
  %115 = load i8** %3, align 8
  %116 = getelementptr inbounds i8* %115, i64 %114
  %117 = load i8* %116, align 1
  %118 = sext i8 %117 to i32
  %119 = icmp ne i32 %112, %118
  br i1 %119, label %120, label %123

; <label>:120                                     ; preds = %105
  %121 = load i32* %min, align 4
  %122 = add nsw i32 %121, 1
  store i32 %122, i32* %min, align 4
  br label %123

; <label>:123                                     ; preds = %120, %105
  %124 = load i32* %min, align 4
  %125 = trunc i32 %124 to i16
  %126 = load i32* %j1, align 4
  %127 = load i32* %2, align 4
  %128 = mul nsw i32 %126, %127
  %129 = load i32* %i2, align 4
  %130 = add nsw i32 %128, %129
  %131 = sext i32 %130 to i64
  %132 = load i16** %grid, align 8
  %133 = getelementptr inbounds i16* %132, i64 %131
  store i16 %125, i16* %133, align 2
  br label %134

; <label>:134                                     ; preds = %123
  %135 = load i32* %i2, align 4
  %136 = add nsw i32 %135, 1
  store i32 %136, i32* %i2, align 4
  br label %50

; <label>:137                                     ; preds = %50
  br label %138

; <label>:138                                     ; preds = %137
  %139 = load i32* %j1, align 4
  %140 = add nsw i32 %139, 1
  store i32 %140, i32* %j1, align 4
  br label %45

; <label>:141                                     ; preds = %45
  %142 = load i32* %2, align 4
  %143 = load i32* %4, align 4
  %144 = mul nsw i32 %142, %143
  %145 = sub nsw i32 %144, 1
  %146 = sext i32 %145 to i64
  %147 = load i16** %grid, align 8
  %148 = getelementptr inbounds i16* %147, i64 %146
  %149 = load i16* %148, align 2
  %150 = sext i16 %149 to i32
  store i32 %150, i32* %ret, align 4
  %151 = load i16** %grid, align 8
  %152 = bitcast i16* %151 to i8*
  call void @free(i8* %152)
  %153 = load i32* %ret, align 4
  ret i32 %153
}

declare noalias i8* @malloc(i64) #1

declare void @free(i8*) #1

; Function Attrs: nounwind uwtable
define i32 @main() #0 {
  %w1 = alloca i8*, align 8
  %s1 = alloca i32, align 4
  %w2 = alloca i8*, align 8
  %s2 = alloca i32, align 4
  %dist = alloca i32, align 4
  store i8* getelementptr inbounds ([8 x i8]* @.str, i32 0, i32 0), i8** %w1, align 8
  store i32 7, i32* %s1, align 4
  store i8* getelementptr inbounds ([7 x i8]* @.str1, i32 0, i32 0), i8** %w2, align 8
  store i32 6, i32* %s2, align 4
  %1 = load i8** %w1, align 8
  %2 = load i32* %s1, align 4
  %3 = load i8** %w2, align 8
  %4 = load i32* %s2, align 4
  %5 = call i32 @ComputeEditDistance(i8* %1, i32 %2, i8* %3, i32 %4)
  store i32 %5, i32* %dist, align 4
  %6 = load i8** %w1, align 8
  %7 = load i8** %w2, align 8
  %8 = load i32* %dist, align 4
  %9 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([43 x i8]* @.str2, i32 0, i32 0), i8* %6, i8* %7, i32 %8)
  ret i32 0
}

declare i32 @printf(i8*, ...) #1

attributes #0 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = metadata !{metadata !"clang version 3.5 (200014)"}
